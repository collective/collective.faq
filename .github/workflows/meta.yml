# Generated from:
# https://github.com/plone/meta/tree/main/src/plone/meta/default
# See the inline comments on how to expand/tweak this configuration file
name: Meta
on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

##
# To set environment variables for all jobs, add in .meta.toml:
# [github]
# env = """
#     debug: 1
#     image-name: 'org/image'
#     image-tag: 'latest'
# """
##

jobs:
  qa:
    uses: plone/meta/.github/workflows/qa.yml@main
  test:
    uses: plone/meta/.github/workflows/test.yml@main
    with:

       py-versions: '["3.13"]'
  coverage:
    uses: plone/meta/.github/workflows/coverage.yml@main
  dependencies:
    uses: plone/meta/.github/workflows/dependencies.yml@main
  release_ready:
    uses: plone/meta/.github/workflows/release_ready.yml@main
  circular:
    uses: plone/meta/.github/workflows/circular.yml@main

##
# To modify the list of default jobs being created add in .meta.toml:
# [github]
# jobs = [
#    "qa",
#    "test",
#    "coverage",
#    "dependencies",
#    "release_ready",
#    "circular",
#    ]
##

##
# To request that some OS level dependencies get installed
# when running tests/coverage jobs, add in .meta.toml:
# [github]
# os_dependencies = "git libxml2 libxslt"
##

##
# To test against a specific matrix of python versions
# when running tests jobs, add in .meta.toml:
# [github]
# py_versions = "['3.12', '3.11']"
##

  buildout:
    # The Meta workflow currently uses tox to test Plone 6.1 on Python 3.13.
    # So let's test Plone 6.0 with buildout on Python 3.9.
    name: Test Plone 6.0 with Buildout
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        plone-version: [6.0]

    steps:
      # git checkout
      - uses: actions/checkout@v4

      # python setup
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # python cache
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # python install
      - name: pip install
        run: pip install -r requirements.txt

      # buildout
      - name: buildout
        run: buildout -t 10 -c plone-${{ matrix.plone-version }}.x.cfg

      # test
      - name: test
        run: bin/test

##
# Specify additional jobs in .meta.toml:
#  [github]
#  extra_lines = """
#  another:
#    uses: org/repo/.github/workflows/file.yml@main
#  """
##
